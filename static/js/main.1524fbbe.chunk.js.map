{"version":3,"sources":["App.js","index.js"],"names":["App","useState","currentAccount","setCurrentAccount","mining","setMining","jokes","setJokes","contractABI","abi","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","account","getJokeNumber","provider","ethers","providers","Web3Provider","signer","getSigner","jokePortalContract","Contract","getTotalJokes","count","toNumber","connectWallet","alert","joke","jokeTxn","wait","hash","useEffect","className","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"0mOAKe,SAASA,IAEtB,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAcC,EAAIA,IAElBC,EAAwB,uCAAG,kCAAAC,EAAA,oEAERC,SAAbC,EAFqB,EAErBA,UAFqB,gBAK3BC,QAAQC,IAAI,4BAA6BF,GALd,6BAO3BC,QAAQC,IAAI,8BAPe,2CAWNF,EAASG,QAAQ,CAAEC,OAAQ,iBAXrB,QAaN,KAFjBC,EAXuB,QAajBC,QACJC,EAAUF,EAAS,GACzBJ,QAAQC,IAAI,kBAAmBK,GAC/BjB,EAAkBiB,IAElBN,QAAQC,IAAI,iCAlBe,kDAqB7BD,QAAQC,IAAR,MArB6B,0DAAH,qDAyBxBM,EAAa,uCAAI,sCAAAV,EAAA,oEAEEC,SAAbC,EAFW,EAEXA,UAFW,wBAKXS,EAAW,IAAIC,IAAOC,UAAUC,aAAaZ,GAC7Ca,EAASJ,EAASK,YAClBC,EAAqB,IAAIL,IAAOM,SAnCpB,6CAmC8CrB,EAAakB,GAP5D,SAQCE,EAAmBE,gBARpB,OAQbC,EARa,OASjBxB,EAASwB,EAAMC,YACflB,QAAQC,IAAI,uCAAwCgB,EAAMC,YAVzC,wBAYjBlB,QAAQC,IAAI,iCAZK,0DAenBD,QAAQC,IAAR,MAfmB,0DAAJ,qDAmBbkB,EAAa,uCAAG,gCAAAtB,EAAA,oEAEGC,OAAbC,EAFU,EAEVA,SAFU,uBAKhBqB,MAAM,iBALU,0CASKrB,EAASG,QAAQ,CAAEC,OAAQ,wBAThC,OASZC,EATY,OAUlBJ,QAAQC,IAAI,cAAeG,EAAS,IAVlB,kDAYlBJ,QAAQC,IAAR,MAZkB,0DAAH,qDAgBboB,EAAI,uCAAI,sCAAAxB,EAAA,oEAEWC,SAAbC,EAFE,EAEFA,UAFE,wBAKFS,EAAW,IAAIC,IAAOC,UAAUC,aAAaZ,GAC7Ca,EAASJ,EAASK,YAClBC,EAAqB,IAAIL,IAAOM,SAtEpB,6CAsE8CrB,EAAakB,GAPrE,SAScE,EAAmBO,OATjC,cASFC,EATE,OAUR/B,GAAU,GAVF,UAWF+B,EAAQC,OAXN,QAYRhC,GAAU,GACVS,QAAQC,IAAIqB,EAAQE,MAbZ,wBAeRxB,QAAQC,IAAI,iCAfJ,0DAkBVD,QAAQC,IAAR,MAlBU,0DAAJ,qDA0BV,OAJAwB,qBAAW,WACT7B,MACC,IAGD,yBAAK8B,UAAU,iBAEb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAf,2BAIA,yBAAKA,UAAU,OAAf,mFAIA,4BAAQA,UAAU,aAAaC,QAASpB,GAAxC,wBAIA,4BAAQmB,UAAU,aAAaC,QAASN,EAAMO,SAAUtC,GAAxD,iBAIA,kEAAwCE,IAGrCJ,GACC,4BAAQsC,UAAU,aAAaC,QAASR,GAAxC,oBCtHZU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1524fbbe.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport './App.css';\r\nimport abi from './utils/WaveFolder.json';\r\n\r\nexport default function App() {\r\n\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  const [mining, setMining] = useState(false);\r\n  const [jokes, setJokes] = useState(0);\r\n  const contractAddress = \"0x06EB61f4781fFB986E6d052b59c87bbdCb6424e5\";\r\n  const contractABI = abi.abi;\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if(ethereum) {\r\n        console.log(\"Ethereum object present: \", ethereum);\r\n      } else {\r\n        console.log(\"Please connect to metamask\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({ method: \"eth_accounts\"});\r\n\r\n      if(accounts.length !== 0) {\r\n        const account = accounts[0];\r\n        console.log(\"Found account: \", account);\r\n        setCurrentAccount(account)\r\n      } else {\r\n        console.log(\"No authorized accounts found.\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const getJokeNumber =  async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if(ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const jokePortalContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n        let count = await jokePortalContract.getTotalJokes();\r\n        setJokes(count.toNumber());\r\n        console.log(\"retrived total count from contract: \", count.toNumber());\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if(!ethereum) {\r\n        alert(\"Get Metamask!\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\"});\r\n      console.log(\"Connected: \", accounts[0]);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const joke =  async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if(ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const jokePortalContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n        \r\n        const jokeTxn = await jokePortalContract.joke();\r\n        setMining(true);\r\n        await jokeTxn.wait();\r\n        setMining(false);\r\n        console.log(jokeTxn.hash);\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect( () => {\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"mainContainer\">\r\n\r\n      <div className=\"dataContainer\">\r\n        <div className=\"header\">\r\n        ðŸ‘‹ Hey there!\r\n        </div>\r\n\r\n        <div className=\"bio\">\r\n        I'm Shivansh. Tell me something funny and you might win a few ETH ðŸ‘€!\r\n        </div>\r\n\r\n        <button className=\"waveButton\" onClick={getJokeNumber}>\r\n          Read number of jokes\r\n        </button>\r\n\r\n        <button className=\"waveButton\" onClick={joke} disabled={mining}>\r\n          Crack a joke!\r\n        </button>\r\n\r\n        <h4>Total number of jokes cracked are: {jokes}</h4>\r\n\r\n        {\r\n          !currentAccount && (\r\n            <button className=\"waveButton\" onClick={connectWallet}>\r\n              Connect Wallet\r\n            </button>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}